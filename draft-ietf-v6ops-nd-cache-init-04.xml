<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4033 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY RFC4429 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4429.xml">
<!ENTITY RFC4861 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC4862 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC4941 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4941.xml">
<!ENTITY RFC6052 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6052.xml">
<!ENTITY RFC6105 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6105.xml">
<!ENTITY RFC6146 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6146.xml">
<!ENTITY RFC6147 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6147.xml">
<!ENTITY RFC6620 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6620.xml">
<!ENTITY RFC6583 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6583.xml">
<!ENTITY RFC6775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6877 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6877.xml">
<!ENTITY RFC7050 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7050.xml">
<!ENTITY RFC7225 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7225.xml">
<!ENTITY RFC7556 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7556.xml">
<!ENTITY RFC7858 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC8305 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8305.xml">
<!ENTITY RFC8505 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8505.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc ipr="trust200902"
     obsoletes=""
     category="info"
     docName="draft-ietf-v6ops-nd-cache-init-04">

  <!-- category values: std, bcp, info, exp, and historic -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title  abbrev="NC Entries Creation">Neighbor Cache Entries on First-Hop Routers: Operational Considerations </title>

    <!-- add 'role="editor"' below for the editors if appropriate -->
    <author fullname="Jen Linkova" initials="J." surname="Linkova">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1 Darling Island Rd</street>
          <city>Pyrmont</city>
          <region>NSW</region>
          <code>2009</code>
          <country>AU</country>
        </postal>

        <phone></phone>
        <email>furry@google.com</email>
      </address>
    </author>

    <date/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
	 in the current day and month for you. If the year is not the current one, it is
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Operations and Management Area (ops)</area>

    <workgroup>v6ops</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>template</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
	    <t>
		    Neighbor Discovery (RFC4861) is used by IPv6 nodes to determine the link-layer addresses of neighboring nodes as well as to discover and maintain reachability information.
		    This document discusses how the neighbor discovery state machine on a first-hop router is causing user-visible connectivity issues when a new (not being seen on the network before) IPv6 address is being used.
	    </t>
    </abstract>
  </front>

  <middle>
	  <section title="Introduction">
		  <t>
			  The section 7.2.5 of <xref target="RFC4861"/> states:
			  "When a valid Neighbor Advertisement is received (either solicited or unsolicited), the Neighbor Cache is searched for the target's entry.
			  If no entry exists, the advertisement SHOULD be silently discarded.
   There is no need to create an entry if none exists, since the recipient has apparently not initiated any communication with the target."
		  </t>
		  <t>
			  This approach is perfectly suitable for host-to-host communications, which are in most cases bi-directional, and it could be expected that if a host A has an ND cache entry for the host B IPv6 address, host B also has the corresponding ND entry for the host A address in its cache.
			  However when a host communicates to off-link destinations via its first-hop router, that logic does not apply. 
			  The most typical scenario when the problem may arise is a host joining the network, forming a new address and using that address for accessing the Internet: 
		  </t>
		  <t>
			  <list style="numbers">
				  <t>
					  A host joins the network and receives a Router Advertisement (RA) packet from the first-hop router (either a periodic unsolicited RA or a response to a Router Solicitation sent by the host).
					 The RA contains information the host needs to perform SLAAC and to configure its network stack.
					 As in most cases the RA also contains the Source link-layer address of the router, the host can populate its Neighbor Cache with the router's link-local and link-layer addresses. 
				  </t>
				  <t>
					  The host starts opening connections to off-link destinations.
					  A very common use case is a mobile device sending probes to detect the Internet connectivity and/or the presence of a captive portal on the network.
					  To speed up that process many implementations use Optimistic Duplicate Address Detection <xref target="RFC4429"/> which allows them to send probes from their GUA before the DAD process is completed.
						  At that moment the device ND cache contains all information required to send those probes (such as the default router link-local the link-layer addresses).
						  The router ND cache, however, might contain an entry for the device link-local address (if the device has been performing the address resolution for the router LLA), but there are no entries for the device GUA.
				  </t>
				  <t>
					  Return traffic is received by the first-hop router.
					  As the router does not have any ND cache entry for the host GUA yet, the router starts the neighbor discovery process by creating an INCOMPLETE cache entry and then sending an NS to the Solicited Node Multicast Address.
					  Most router implementations buffer only one data packet while resolving the packet destination address, so it would drop all subsequent packets for the host GUA, until the address resolution process is completed.
				  </t>
				  <t>
					If the host sends multiple probes in parallel,  it would consider all but one of them failed.
					  It leads to user-visible delay in connecting to the network, especially if the host implements some form of backoff mechanism and does not retransmit the probes as soon as possible.
				  </t>
			  </list>
		  </t>
		  <t>
				  This scenario illustrates the problem occurring when the device connects to the network for the first time or after a timeout long enough for the device address to be removed from the router's neighbor cache.
				  However, the same sequence of events happen when the host starts using a new GUA previously unseen by the router, such as a new privacy address <xref target="RFC4941"/> or if the router's Neighbor Cache has been flushed.
		  </t>
		  <t>
			  While in dual-stack networks this problem might be hidden by Happy Eyeballs <xref target="RFC8305"/> it manifests quite clearly in IPv6-only environments, especially wireless ones, leading to poor user experience and contributing to a negative perception of IPv6-only solutions as unstable and non-deployable.
		  </t>
		  <t>
				  This document discusses the operational implications of not proactively creating Neighbor Cache entries on first-hop routers and summarizes various approaches to mitigate the problem. 
		  </t>
		  
		  <section title="Requirements Language">
			  <t>
				  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                        "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
                        "OPTIONAL" in this document are to be interpreted as described in
                        BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
			when, and only when, they appear in all capitals, as shown here.
		</t>
      </section>
      <section title="Terminology">
	      <t>
		      ND: Neighbor Discovery, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      SLAAC: IPv6 Stateless Address Autoconfiguration, <xref target="RFC4862"/>.
	      </t>
	      <t>
		      NS: Neighbor Solicitation, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      NA: Neighbor Advertisement, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      RS: Router Solicitation, <xref target="RFC4861"/>.
	      </t> 
	      <t>
		      RA: Router Advertisement,  <xref target="RFC4861"/>.
	      </t>
	      <t>
		      SLLA: Source link-layer Address, an option in the ND packets containing the link-layer address of the sender of the packet, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      TLLA: Target link-layer Address, an option in the ND packets containing the link-layer address of the target, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      GUA: Global Unicast Address, <xref target="RFC4291"/>.
	      </t>

	      <t>
		      DAD: Duplicate Address Detection, <xref target="RFC4862"/>.
	      </t>
	      <t>
		      Optimistic DAD: a modification of DAD, <xref target="RFC4429"/>.
	      </t>
	      <t>
			      FCFS SAVI: First-Come, First-Served Source Address Validation, <xref target="RFC6620"/>.
	      </t>

         </section>
 </section>
 <section  title="Proposed Solution" >
 	<section  title="Solution Requirements" >
		<t>
		It would be highly desirable to improve the Neighbor Discovery mechanics so routers have a usable cache entry for a host address by the time the router receives the first packet for that address.
		 In particular:
		 
		 <list style="symbols">
			 <t>
				 If the router does not have a Neighbor Cache entry for the address, a STALE entry needs to be created.
			 </t>
			 <t>
				 The solution needs to work for Optimistic addresses as well.
				 Devices implementing the Optimistic DAD usually attempt to minimize the delay in connecting to the network and therefore are more likely to be affected by the problem described in this document.
			 </t>
			 <t>
				 In case of duplicate addresses present in the network, the proposed solution MUST NOT override the existing entry.
			 </t>
			 <t>
				 In topologies with multiple first-hop routers the cache needs to be updated on all of them, as traffic might be asymmetric: outgoing flows leaving the network via one router while the return traffic enters the segment via another one.
			</t>
		</list>
	</t>
	<t>
			In addition the solution MUST NOT exacerbate issues described in <xref target="RFC6583"/> and MUST be compatible with the recommendations provided in <xref target="RFC6583"/>.
	</t>

 	</section>
	<section title="Solution Overview">
		      <t>
			      The Neighbor Discovery is designed to allow IPv6 nodes to discover neighboring nodes reachability and learn IPv6 to link-layer addresses mapping.
			      Therefore ND seems to be the most appropriate tool to inform the first-hop routers about addresses the host is going to use.
		      </t>
		      <t>
			      Section 4.4 of <xref target="RFC4861"/> says:
		      </t>
		      <t>
				      "A node sends Neighbor Advertisements in response to Neighbor Solicitations and sends unsolicited Neighbor Advertisements in order to (unreliably) propagate new information quickly."
		      </t>
		      <t>
				      Propagating information about new GUA as quickly as possible is exactly what is required to solve the problem outlined in this document.
				      Therefore the host might send an unsolicited NA with the target link-layer address option to advertise its GUA as soon as the said address enters Optimistic or Preferred state.
		      </t>
		      <t>
				      The proposed solution is discussed in <xref target="I-D.ietf-6man-grand" />.
					In summary, the following changes to  <xref target="RFC4861"/> are suggested:
			      <list style="symbols">
				      <t>
					       A node SHOULD send up to MAX_NEIGHBOR_ADVERTISEMENT unsolicited NA packet with the Override flag cleared to all-routers multicast address (ff02::2) as soon as one of the following events happens:
                                    <list style="symbols">
                                            <t>
                                                    (if Optimistic DAD is used): a new Optimistic address is assigned to the node interface.
                                            </t>
                                            <t>
                                                    (if Optimistic DAD is not used): an address changes the state from tentative to preferred.
                                            </t>

                                    </list>
                            </t>
                            <t>
				    Routers SHOULD create a new STALE ND cache entry upon receiving unsolicited NAs.
                            </t>
			      </list>
		      </t>
		      <t>
				      It should be noted that some routing and switching platforms have implemented such behaviour already.
				      Administrators could enable the creation of neighbor discovery cache entries based on unsolicited NA packets sent from the previously unknown neighbors on that interface. 
		      </t>
		      <t>
				      Network devices implementing FCFS SAVI might drop Neighbor Advertisements received through a Validating Port which is in the TENTATIVE state (see Section 2.3.2 of<xref target="RFC6620"/>).
					      Therefore hosts using Optimistic DAD might not benefit from the proposed solution if FCFS SAVI is implemented on the network infrastructure.
					      <xref target="I-D.ietf-6man-grand" /> discusses in more details how the proposed solution interacts with SAVI.


		      </t>

 	</section>
      </section>

	<section title="Solutions Considered but Discarded">
		<t>
                      The problem could be addressed from different angles. Possible approaches are:
                      <list style="symbols">
                              <t>
                                      Just do nothing.
                              </t>
                              <t>
                                      Migrate from the "reactive" Neighbor Discovery (<xref target="RFC4861"/>) to the registration-based mechanisms (<xref target="RFC8505"/>).
                              </t>
                              <t>
                                     The router creates new entries in its Neighbor Cache by gleaning from Neighbor Discovery DAD messages.
                              </t>
                              <t>
                                      The host initiates bidirectional communication to the router using the host GUA.
                              </t>
                              <t>
                                      Making the probing logic on hosts more robust.
                              </t>
                              <t>
                                      Increasing the buffer size on routers.
                              </t>
                              <t>
                                      Transit dataplane traffic from an unknown address (an address w/o the corresponding neighbor cache entry) triggers an address resolution process on the router.
                              </t>
                      </list>
              </t>
              <t>
                      It should be noted that some of those options are already implemented by some vendors. The following sections discuss those approaches and the reasons they were discarded.
	      </t>
	      <section title="Do Nothing">
                      <t>
                              One of the possible approaches might be to declare that everything is working as intended and let the upper-layer protocols to deal with packet loss. The obvious drawbacks include:
                                      <list style="symbols">
                                              <t>
                                                      Unhappy users.
                                              </t>
                                              <t>
                                                      Many support tickets.
                                              </t>
                                              <t>
                                                      More resistance to deploy IPv6 and IPv6-Only networks.
                                              </t>
                                      </list>
                      </t>
	      </section>

	       <section title="Change to the Registration-Based Neighbor Discovery">
                      <t>
                              The most radical approach would be to move away from the reactive ND as defined in <xref target="RFC4861"/> and expand the registration-based ND (<xref target="RFC6775"/>, <xref target="RFC8505"/>) used in Low-Power Wireless Personal Area Networks (6LoWPANs) to the rest of IPv6 deployments.
                              This option requires some investigation and discussions and seems to be an overkill for the problem described in this document.
                      </t>
	      </section>

	      <section title="Host Sending NS to the Router Address from Its GUA">
		      <t>
			      The host could force creating a STALE entry for its GUA in the router ND cache by sending the following  Neighbor Solicitation message:
			      <list  style="symbols">
				      <t>
					      The NS source address is the host GUA.
				      </t>
				      <t>
						      The destination address is the default router IPv6 address.
				      </t>
				      <t>
					      The Source Link-Layer Address option contains the host link-layer address.
				      </t>
				      <t>
					      The target address is the host default router address (the default router address the host received in the RA).
				      </t>
			      </list>
		      </t>
		      <t>
			      The main disadvantages of this approach are:
			      <list  style="symbols">
				      <t>
					      Would not work for Optimistic addresses as section 2.2 of <xref target="RFC4429"/> explicitly prohibits sending Neighbor Solicitations from an Optimistic Address.
				      </t>
				      <t>
					      If first-hop redundancy is deployed in the network, the NS would reach the active router only, so all backup routers (or all active routers ex. one) would not get their neighbor cache updated.
				      </t>
				      <t>
						      Some wireless devices are known to alter ND packets and perform various non-obvious forms of ND proxy actions.
						     In some cases, unsolicited NAs might not even reach the routers.
				      </t>
			      </list>
		      </t>
	      </section>

	       <section title="Host Sending Router Solicitation from its GUA">
                              <t>
				      The host could send a router solicitation message to 'all routers' multicast address, using its GUA as a source.
				      If the host link-layer address is included in the Source Link-Layer Address option, the router would create a STALE entry for the host GUA as per the section 6.2.6 of <xref target="RFC4861"/>.
				      However, this approach can not be used if the GUA is in optimistic state: section 2.2 of <xref target="RFC4429"/> explicitly prohibits using an Optimistic Address as the source address of a Router Solicitation with a SLLAO as it might disrupt the rightful owner of the address in the case of a collision.
				      So for the optimistic addresses the host can send an RS without SLLAO included.
				      In that case the router may respond with either a multicast or a unicast RA (only the latter would create a cache entry).
                      </t>
		      <t>
			      This approach has the following drawbacks:
                                      <list style="symbols">
                                              <t>
						      If the address is in the Optimistic state the RS can not contain SLLAO. As a result the router would only create a cache entry if the solicited RAs is sent as as a unicast.
						      Routers sending solicited RAs as multicast would not create a new cache entry as they do not need to send a unicast packet back to the host.
					      </t>
					      <t>
						      There might be a random delay between receiving an RS and sending a unicast RA back (and creating a cache entry) which might undermine the idea of creating the cache entry proactively.
                                              </t>
                                              <t>
                                                      Some wireless devices are known to fiddle with ND packets and perform various non-obvious forms of ND proxy actions. In some cases the RS might not even reach the routers.
                                              </t>

                                      </list>
                      </t>
	      </section>


	       <section title="Routers Populating Their Caches by Gleaning From Neighbor Discovery Packets">
		       <t>
			       Routers may be able to learn about new addresses by gleaning from the DAD Neighbor Solicitation messages.
			       The router could listen to all solicited node multicast address groups and upon receiving a Neighbor Solicitation from the unspecified address search its Neighbor Cache for the solicitation's Target Address.
			       If no entry exists, the router may create an entry, set its reachability state to 'INCOMPLETE' and start the address resolution for that entry.
                      </t>
		      <t>
			      The same solution was proposed in <xref target= "I-D.halpern-6man-nd-pre-resolve-addr" />. Some routing vendors support such optimization already. However, this approach has a number of drawbacks and therefore should not be used as the only solution:
                                      <list style="symbols">
                                              <t>
                                                      Routers need to receive all multicast Neighbor Discovery packets which might negatively impact the routers CPU.
                                              </t>
                                              <t>
						      If the router starts the address resolution as soon as it receives the DAD Neighbor Solicitation the host might be still performing DAD and the target address might be tentative.
						      In that case, the host SHOULD silently ignore the received Neighbor Solicitation from the router as per the Section 5.4.3 of <xref target="RFC4862"/>. 
						      As a result the router might not be able to complete the address resolution before the return traffic arrives.

                                              </t>
                                      </list>
                      </t>
	      </section>

	      <section title="Initiating Hosts-to-Routers Communication">
		      <t>
			      The host may force the router to start address resolution by sending a data packet such as ping or traceroute to its default router link-local address, using the GUA as a source address.  
			      As the RTT to the default router  is lower than RTT to any off-link destinations it's quite likely that the router would start the neighbor discovery process for the host GUA before the first packet of the returning traffic arrives.
                      </t>
                      <t> The downside of this approach includes:
                                      <list style="symbols">
                                              <t>
                                                      Data packets to the router LLA could be blocked by security policy or control plane protection mechanism.
                                              </t>
                                              <t>
                                                      Additional overhead for routers control plane (in addition to processing ND packets, the data packet needs to be processed as well).
                                              </t>
					      <t>
						      Unless the data packet is sent to 'all routers' ff02::2 multicast address, if the network provides a first-hop redundancy then only the active router would create a new cache entry.
                                              </t>
                                      </list>
                      </t>
	      </section>

	      <section title="Transit Dataplane Traffic From a New Address Triggering Address Resolution">
		      <t>
			      When a router receives a transit packet, it might check the presence of the neighbor cache entry for the packet source address and if the entry does not exist start address resolution process.
			      This approach does ensure that a Neighbor Cache entry is proactively created every time a new, previously unseen GUA is used for sending offlink traffic.
However this approach has a number of limitations, in particular:
<list style="symbols">
<t>If traffic flows are asymmetrical the return traffic might not transit the same router as the original traffic which triggered the address resolution.
So the neighbor cache entry is created on the "wrong" router, not the one which actually needs the neighbor cache entry for the host address.
</t>
<t>
The functionality needs to be limited to explicitly configured networks/interfaces, as the router needs to distinguish between onlink addresses (ones the router needs to have Neighbor Cache entries for) and the rest of the address space.
</t>
<t>
Implementing such functionality is much more complicated than all other solutions as it would involve complex data-control planes interaction.
</t>
</list>
		      </t>
	      </section>

    </section>

    <section anchor="IANA" title="IANA Considerations">
	    <t>
		    This memo asks the IANA for no new parameters.
	    </t>
    </section>

    <section anchor="Security" title="Security Considerations">
	    <t>
		    This memo documents the operational issue and does not introduce any new security considerations.
		    Security considerations of the proposed solution are discussed in the corresponding section of <xref target="I-D.ietf-6man-grand"/>.
	    </t>
    </section>
    <section anchor="Acknowledgements" title="Acknowledgements">
	    <t>
		    Thanks to the following people (in alphabetical order) for their
   review and feedback: Mikael Abrahamsson, Lorenzo Colitti, Owen DeLong, Igor Gashinsky, Fernando Gont, Tatuya Jinmei, Erik Kline, Warren Kumari, 
Jordi Palet Martinez, Michael Richardson, Dave Thaler, Pascal Thubert, Loganaden Velvindron, Eric Vyncke.
	    </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      &RFC2119;
      &RFC4291;
      &RFC4429;
      &RFC4861;
      &RFC4862;
      &RFC6620;
      &RFC6775;
      &RFC6583;
      &RFC8305;
      &RFC8505;
      &RFC8174;
      <?rfc include="reference.I-D.ietf-6man-grand" ?>
    </references>

    <references title="Informative References">
	    &RFC4941;
	    <?rfc include="reference.I-D.halpern-6man-nd-pre-resolve-addr" ?>
    </references>

  </back>
</rfc>
