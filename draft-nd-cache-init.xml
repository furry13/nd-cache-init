<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4033 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4291 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY RFC4429 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4429.xml">
<!ENTITY RFC4861 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC4862 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC4941 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4941.xml">
<!ENTITY RFC6052 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6052.xml">
<!ENTITY RFC6105 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6105.xml">
<!ENTITY RFC6146 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6146.xml">
<!ENTITY RFC6147 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6147.xml">
<!ENTITY RFC6583 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6583.xml">
<!ENTITY RFC6775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6877 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6877.xml">
<!ENTITY RFC7050 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7050.xml">
<!ENTITY RFC7225 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7225.xml">
<!ENTITY RFC7556 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7556.xml">
<!ENTITY RFC7858 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7858.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC8305 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8305.xml">
<!ENTITY RFC8505 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8505.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc ipr="trust200902"
     obsoletes=""
     category="info"
     docName="draft-linkova-v6ops-nd-cache-init-01">

  <!-- category values: std, bcp, info, exp, and historic -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

    <title>Neighbor Cache Entries on First-Hop Routers: Operational Considerations </title>

    <!-- add 'role="editor"' below for the editors if appropriate -->
    <author fullname="Jen Linkova" initials="J." surname="Linkova">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1 Darling Island Rd</street>
          <city>Pyrmont</city>
          <region>NSW</region>
          <code>2009</code>
          <country>AU</country>
        </postal>

        <phone></phone>
        <email>furry@google.com</email>
      </address>
    </author>

    <date/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
	 in the current day and month for you. If the year is not the current one, it is
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Operations and Management Area (ops)</area>

    <workgroup>v6ops</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>template</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
	    <t>
		    Neighbor Discovery (RFC4861) used by IPv6 nodes to determine the link-layer addresses of neighboring nodes as well as to discover and maintain reachability information. This document discusses how the neighbor discovery state machine on a first-hop router is causing user-visible connectivity issues when a new (not being seen on the network before) IPv6 address is being used.
	    </t>
    </abstract>
  </front>

  <middle>
	  <section title="Introduction">
		  <t>
			  The section 7.2.5 of <xref target="RFC4861"/> states:
			  "When a valid Neighbor Advertisement is received (either solicited or
   unsolicited), the Neighbor Cache is searched for the target's entry.
   If no entry exists, the advertisement SHOULD be silently discarded.
   There is no need to create an entry if none exists, since the
   recipient has apparently not initiated any communication with the
   target."
		  </t>
		  <t>
			  This approach is perfectly suitable for host2host communications which are in most cases bi-directional and it could be expected that if a host A has an ND cache entry for the host B IPv6 address, the host B also has the corresponding ND entry for the host A address in its cache. However when a host communicates to off-link destinations via its first-hop router that logic does not apply. Here is the most typical scenario when the problem may arise: 
		  </t>
		  <t>
			  <list style="numbers">
				  <t>
					  When a host joins the network it receives an RA packet from the first-hop router (either a periodic unsolicited RA or a response to an RS sent by the host). The RA contains information the host needs to perform SLAAC and to configure its network stack. Among other things the host populates its ND cache with the router link-local address and potentially link-layer address (if included in the RA Source Link-Layer Address option). 
				  </t>
				  <t>
					  The host starts opening connections to off-link destinations. Very comon use case is a mobile device sending probes to detect the Internet connectivity and/or the captive portals presence on the network. To speed up that process many implementations are using the Optimistic Duplicate Address Detection (<xref target="RFC4429"/>) which allows them to send probes from their GUA before the DAD process is completed. Imprortant point here is that at that moment the device ND cache contains all information required to send those probes (such as the default gateway LLA and the link-layer address). The router ND cache, however, might contain an entry for the device link-local address (if the device has been performing the ND process for the roiter LLA) but there are no entries for the device GUA.
				  </t>
				  <t>
					  Response packets for the probes (or any other traffic sent by the host) are received by the first-hop router. As the router does not have any ND cache entry for the host GUA, the router starts the neighbor discover process by creating an INCOMPLETE cache entry and then sending an NS to the Solicited Node Multicast Address. Apparently most of the router implementations buffer only one data packet while performing the ND process for its destination. Therefore all packets for the host GUA, except for the very first one are dropped until the address resolution process is completed.
				  </t>
				  <t>
					  As many implementations send multiple probes in parallel it's very likely that all probes ex. the first one would be considered failed. If the host implements an exponential backoff for probing it leads to user-noticeble delay in detecting network connectivity/reporting the network as usable.
				  </t>
			  </list>
		  </t>
		  <t>
			  The above-mentioned scenario illustrates the problem happening when the device connects to the network for the first time/after a long timeout. However the same sequence of events happen when the host starts using the new (previously unseen by the router or ) GUA (e.g. a new privacy address <xref target="RFC4941"/>) or if the router Neighbor Cache has been flushed.
		  </t>
		  <t>
			  While in dual-stack networks this problem might hidden by Happy Eyeballs (<xref target="RFC8305"/>) it manifests itself quite clearly in IPv6-only networks, especially wireless ones, leading to poor user experience and contributing to negative perception of IPv6-only solitions as unstable and non-deployable.
		  </t>
		  
		  <section title="Requirements Language">
			  <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                        "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
                        "OPTIONAL" in this document are to be interpreted as described in
                        BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
			when, and only when, they appear in all capitals, as shown here.</t>
      </section>
      <section title="Terminology">
	      <t>
		      ND: Neighbor Discovery, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      SLAAC: IPv6 Stateless Address Autoconfiguration, <xref target="RFC4862"/>.
	      </t>
	      <t>
		      NS: Neighbor Solicitation, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      NA: Neighbor Advertisement, <xref target="RFC4861"/>.
	      </t>
	      <t>
		      RS: Router Solicitation, <xref target="RFC4861"/>.
	      </t> 
	      <t>
		      RA: Router Advertisement,  <xref target="RFC4861"/>.
	      </t>
	      <t>
		      SLLA: Source link-layer Address, an option in the ND packets containing the link-layer address of the sender of the packet (<xref target="RFC4861"/>).
	      </t>
	      <t>
		      TLLA: Target link-layer Address, an option in the ND packets containing the link-layer address of the target (<xref target="RFC4861"/>).
	      </t>
	      <t>
		      GUA: Global Unicast Address (<xref target="RFC4291"/>).
	      </t>

	      <t>
		      DAD: Duplicate Address Detection,  <xref target="RFC4862"/>.
	      </t>
	      <t>
		      Optimistic DAD: a modification of DAD, <xref target="RFC4429"/>.
	      </t>

         </section>
      </section>

      <section title="Potential Solutions">
	      <t>
		      The problem could be addressed from different angles. Possible approaches are:
		      <list style="symbols">
			      <t>
				      Just do nothing.
			      </t>
			      <t>
				      Migrate from the "reactive" Neighbor Discovery (<xref target="RFC4861"/>) to the registration-based mechanisms (<xref target="RFC8505"/>).
			      </t>
			      <t>
				     The host explicitly advertizes its GUAs using Neighbor Discovery mechanisms.
			      </t>
			      <t>
				      The host initiates bidirectional communication to the router using the host GUA.
			      </t>
			      <t>
				      Making the probing logic on hosts more robust.
			      </t>
			      <t>
				      Increasing the buffer size on routers.
			      </t>
		      </list>
	      </t>
	      <t>
		      The following sections discuss those approaches in more details.
	      </t>
	      <section title="Do Nothing">
		      <t>
			      One of the possible approaches might be to declare that everything is working as intended.
		      </t>
		      <section title="Pros">
		      <t>
				      <list style="symbols">
					      <t>
						      No work required.
					      </t>
				      </list>
		      </t>
	              </section>
		      <section title="Cons">
		      <t>
				      <list style="symbols">
					      <t>
						      Unhappy users.
					      </t>
					      <t>
						      Many support tickets.
					      </t>
					      <t>
						      More resistance to deploy IPv6 and IPv6-Only networks.
					      </t>
				      </list>
		      </t>
	              </section>
	      </section>
	      <section title="Change to the Registration-Based Neighbor Discovery">
		      <t>
			      The most radical approach would be to move away from the reactive ND as defined in <xref target="RFC4861"/> and expand the registration-based ND (<xref target="RFC6775"/>, <xref target="RFC8505"/>) used in Low-Power Wireless Personal Area Networks (6LoWPANs) to the rest of IPv6 deployments.
		      </t>
		      <t>
			      This option required some investigation and discussions. More text will be added here in the following revision of the draft.
		      </t>
	      </section>
	      <section title="Hosts Explicitly Advertizing Their GUAs Using Existing ND Mechanisms">
		      <t>
			      The Neighbor Discovery is designed to allow IPv6 nodes to discover neighboring nodes rechability and learn IPv6 to link-layer addresses mapping. Therefore ND seems to be the most appropriate tool to inform the first-hop routers about addresses the host is going to use. The following sections discusses potential apptoaches in more details.
		      </t>
		      <section title="Host Sending Unsolicited NA">
			      <t>
				      Section 4.4 of <xref target="RFC4861"/> says:
			      </t>
			      <t>
				      "A node sends Neighbor Advertisements in response to Neighbor
   Solicitations and sends unsolicited Neighbor Advertisements in order
   to (unreliably) propagate new information quickly."
			      </t>
			      <t>
				      Propagating information about new GUA as quickly as possible is exactly what is required to solve the problem outlined in this document. Therefore the host might send an unsolicited NA to advertize its GUA as soon as the said address enters Optimistic or Preferred state. The NA should inclide the target link-layer address option. To ensure that all first-hop routers receive the advertisement it could be sent to all-routers multicast address (ff02::2).
			      </t>
			      <t>
				      As it's been mentioned, <xref target="RFC4861"/> explicitly states that receiving a NA should not create a new NC entry. However the justification for that requirement ("There is no need to create an entry if none exists, since the recipient has apparently not initiated any communication with the target.") clearly does not apply for the case discussed. As per <xref target="RFC2119"/> "there may exist valid reasons in particular circumstances to ignore a particular item, but the full implications must be understood and carefully weighed before choosing a different course.". Therefore routers creating a new NC entry upon receiving an unsolicited NA would still be compliant with <xref target="RFC4861"/>.
			      </t>
			      <t>
				      It should be noted that some routing and switching plaforms have implemented such behaviour already. Administrators could enable creating neighbor discovery cache entries based on unsolicited NA packets sent from the previously unknown neighbors on that interface. 
			      </t>
		      
		      <section title="Pros">
		      <t>
				      <list style="symbols">
					      <t>
						      Already implemented on some platforms.
					      </t>
					      <t>
						      In accordance with <xref target="RFC4861"/>.
					      </t>
				      </list>
		      </t>
	              </section>
		      <section title="Cons">
		      <t>
				      <list style="symbols">
					      <t>
						      Allows a malicious host to execute an ND cache exhaustion attack. It's recommended that this functionality is configurable and recommendations from  <xref target="RFC6583"/> are taken into account.
					      </t>
					      <t>
						      Requires hosts to send unsolicited NA (changes to the hosts).
					      </t>
					      <t> Some wireless devices are known to fiddle with ND packets and perform various non-obvious forms of ND proxy actions. In some cases unsoliciated NAs might not even reach the routers.
					      </t>
				      </list>
		      </t>
	              </section>
	              </section>
		      <section title="Host Sending NS to the Router Address from Its GUA">
			      <t>
				      The host could force creating a STALE entry for its GUA in the router ND cache by sending the following  Neighbor Solicitation message:
				      <list style="symbols">
					      <t>
						      The NS source address is the host GUA.
					      </t>
					      <t>
						      The Source Link-Layer Address option contains the host link-layer address.
					      </t>
					      <t>
						      The target address is the host default gateway address (the default router address the host received in the RA).
					      </t>
				      </list>
			      </t>
			      <t>
				      The main disadvantage of this approach is that it would not work if the GUA the host needs to advertise is still in the Optimistic state. The section 2.2 of <xref target="RFC4429"/> explicitly prohibits sending Neighbor Solicitations from an Optimistic Address.
				      </t>
		      <section title="Pros">
		      <t>
				      <list style="symbols">
					      <t>
						      Router implementations which follow recommendations made in <xref target="RFC6583"/> might prioritize responding to NS packets to own addresses.
					      </t>
				      </list>
		      </t>
	              </section>
		      <section title="Cons">
		      <t>
				      <list style="symbols">
					      <t>
						      Does not work for Optimistic addresses (see section 2.2 of <xref target="RFC4429"/>).
						      </t>
						      <t>
						If first-hop redundancy is deployed in the network, the NS would reach the active router only, so all backup routers (or all active routers ex. one) would not get their neighbor cache updated.	      
						      </t>
					      <t> Some wireless devices are known to fiddle with ND packets and perform various non-obvious forms of ND proxy actions. In some cases unsoliciated NAs might not even reach the routers.
					      </t>
				      </list>
		      </t>
	              </section>
	              </section>
		      <section title="Host Sending Router Solicitation from its GUA">
			      <t>
				      The host could send a router solicitation message to 'all routers' multicast address, using its GUA as a source. If the host link-layer address is included in the Source Link-Layer Address option, the router would create a STALE entry for the host GUA (see the section 6.2.6 of <xref target="RFC4861"/>). However this approach can not be used if the GUA is in optimistic state: the section 2.2 of <xref target="RFC4429"/> explicitly prohibits using an Optimistic Address as the source address of a Router Solicitation with a SLLAO as it might disrupt the rightful owner of the address in the case of a collision. So for the optimistic addresses the host can send an RS without SLLAO included. In that case the router may respond with either a multicast or a unicast RA (only the latter would create a cache entry). 

		      </t>
		      <section title="Pros">
		      <t>
				      <list style="symbols">
					      <t>
						      Unlike NS packets, RS packets would reach all routers on link, allowing all routers to update their neighbor caches and preventing packet loss in case of asymmetric routing.
					      </t>
				      </list>
		      </t>
	              </section>
		      <section title="Cons">
		      <t>
				      <list style="symbols">
					      <t>
						      As for the Optimisitic addresses SLLAO can not be included into RS packets, the cache entry for the optimistic address would be created only if the router sends solicited RAs as unicast. In addition, there might be a random delay between receiving an RS and sending a unicast RA back (and creating a cache entry) which might undermine the idea of creating the cache entry proactively.
					      </t>
					      <t>
						      Some wireless devices are known to fiddle with ND packets and perform various non-obvious forms of ND proxy actions. In some cases RSes might not even reach the routers.
					      </t>

				      </list>
		      </t>
	      </section>
      </section>
	      </section>
	      <section title="Initiating Hosts2Routers Communication">
		      <t>
			      Every time the host configures a new GUA (when the address enters the Optimistic state or, if the optimistic DAD is not used, as soon as it changes the state from tentative to preferred) the host can a ping or traceroute packet to the default gateway LLA. As the RTT to the dafault gateway is lower than RTT to any off-link destinations it's quite likely that the router would start the neighbor discovery process for the host GUA before the first packet of the returning traffic arrives. There are pretty good chances that the process would be completed before the actual data traffic reaches the router. 
		      </t>
		      <section title="Pros">
			      <t>
				      <list style="symbols">
					      <t>
						      As data packets are involved, there is no potential impact caused by smart wireless infrastructure performing ND proxy.
					      </t>
					      <t>
						      Full compliance with existing standards.
					      </t>
				      </list>
		      </t>
	              </section>
		      <section title="Cons">
		      <t>
				      <list style="symbols">
					      <t>
						      Data packets to the router LLA could be blocked by security policy or control plane protection mechanism.
					      </t>
					      <t>
						      Maximum overhead for routers control plane (in addition to processing ND packets, the data packet needs to be processed as well).
					      </t>
					      <t>
						      If the first hop redunancy is implemented in the network the host ping/traceroute packet would reach the active router only. All backup routers would not receive it and therefore would not start populating the cache. So in the case of asymmetric traffic flow (packets leave the network via one router while the return flow is going via another) the backup router(s) still would not have the cache entry. (A hacky way to overcome this limitation would be sending ping/tracroute packet to 'all routers' ff02::2 multicast address).

					      </t>
				      </list>
		      </t>
	              </section>
	      </section>
	      <section title="Tweaking Probing Algorithms">
		      <t>
			      While tweaking the probing logic on devices might make the problem less visible it would be still desirable to avoid packet loss everytime the new GUA is used by a host. It would be quite tricky to adjust every probing algorithm to find the right balance between prompt detection of network connectivity and false positives in IPv6-only mode.
		      </t>
	      </section>
	      <section title="Routers Buffering More Packets">
		      <t>
			      Another way to mitigate the issue, at least partially, would be increasing the number of packets the router could buffer while performing the neighbor discovery process for the INCOMPLETE cache entry. However it would be against recommendations made in the section 7.2.2 of <xref target="RFC4861"/> and <xref target="RFC6583"/>.
		      </t>
		      <section title="Pros">
		      <t>
				      <list style="symbols">
					      <t>
						     Does not require changes on hosts. 
					      </t>
				      </list>
		      </t>
	              </section>
		      <section title="Cons">
		      <t>
				      <list style="symbols">
					      <t>
						      This approach makes the routers even more vulnerable to attack vectors described in <xref target="RFC6583"/>. In particular, it would amplify the impact of any scanning attack.
					      </t>
					      <t>
						      Against the recommendations from the section 7 of <xref target="RFC6583"/>.
					      </t>
					      <t>

						      Requires router vendors support.
					      </t>
				      </list>
		      </t>
	              </section>
	      </section>
    </section>
    <section title="Recommendations">
	    <t>
		    <list style="symbols">
			    <t>
				    Hosts SHOULD send at least one unsolicited NA packet to all-routers multicast address (ff02::2) as soon as one of the following events happens:
				    <list style="symbols">
					    <t>
						    (if Optimistic DAD is used): a new Optimistic GUA is assigned to the host interface.
					    </t>
					    <t>
						    (if Optimistic DAD is not used): a GUA changes the state from tentative to preferred.
					    </t>
				    
				    </list> 
			    </t>
			    <t>
				    Routers SHOULD have a configuration knob to enable creating ND cache entry upon receiving unsolicited NAs on a specific interface. This document does not change the behavior if the ND cache entry already exists when receiving an unsolicited NA.
			    </t>
		    </list>
	    </t>
	    <section anchor="avoid_dis" title="Avoiding Disruption">
		    <t>
			    If hosts following the recommendations in this document are using the DAD mechanism defined in <xref target="RFC4862"/>, they would send unsolicited NA as soon as the address changes the state from tentative to preferred (after its uniqueness has been verified). However hosts willing minimize network stack configuration delays might be using optimistic addresses, which means there is possibility of the address not being unique on the link. The section 2.2 of <xref target="RFC4429"/> discusses meausures to ensure that ND packets from the optimistic address do not override any existing neighbor cache entries as it would cause traffic interruption of the righful address owner in case of address conflict.
		    </t>
		    <t>
			    As hosts willing to speed up their network stack configuration are most likely to be affected by the problem outlined in this document it seems reasonable for such hosts to advertise their optimistic GUAs by sending unsolicited NAs. The main question to consider is the potential risk of overriding the cache entry for the rightful address owner if the optimistic address happens to be duplicated.
		    </t>
		    <t>
			    As per section 7.2.5 of <xref target="RFC4861"/> if the Neighbor Cache entry for the target address already exists and is in in any state other than INCOMPLETE then the only change the unsolicited NA could cause is to change the entry from REACHABLE to STALE. It would not cause any traffic interruption for the rightful address owner.
		    </t>
		    <t>
			    If there is no entry then it would be created/updated with the supplied LLA and its state set to STALE. In that case as soon as the entry is used for sending traffic to the host, the entry state will be changes to DELAY and the Neighbor Unreachability Detection would be started and the rightful owner LLA will be entered in the cache. So in the scenario when the rightful owner does not use the address for communication then it might be a short (a few seconds) period of time when the data packets sent from the outside could reach the host with the optimistic address. However it seems likely that hosts using Optimistic DAD would start sending/receiving traffic right away, so the first return packet would trigger the NUD process and rewrite the cache. 
		    </t>
		    <t>
			    Another corner case is the INCOMPLETE cache entry for the address. If the host sends a unsolicited NA from the Optimistic address it would update the entry with the host LLA and set the entry to the STALE state. As the INCOMPLETE entry means that the router has started the ND process for the address and the multicast NS has been sent, the rightful owner is expected to reply with solicited NA which would recover the cache entry and set the LLA to the righful owner's one. The risk here:
			    <list style="symbols">
				    <t>
					    The data packet arrives after the unsolicited NA from the host but before the rightful owner responded with the solicited NA. Those packets would be sent to the host with the optimistic address instead of its righful owner. However without the unsolicited NA those packets would have been dropped anyway (as the entry was in INCOMPLETE state).
				    </t>
			    </list>

		    </t>

    </section>

    </section>

    <section anchor="IANA" title="IANA Considerations">
	    <t>
		    This memo asks the IANA for no new parameters.
	    </t>
    </section>

    <section anchor="Security" title="Security Considerations">
	    <t>
                    One of the potential attack verctor to consider is a cache spoofing when the attacker might try to install a cache entry for the victim's IPv6 address and the attacker's Link-Layer address. However it should be noted that this document does not propose any changes for the scenario when the ND cache for the given IPv6 address already exists. Therefore it is not possible for the attacker to override any existing cache entry. 
	    </t>
	    <t>
		    A malicious host could attempt to exhaust the neighbor cache on the router by creating a large number of STALE entries. However this attack vector is not new and this document does not increase the risk of such attack: the attacker could do it, for example, by sending a NS or RS packet with SLLAO included. All recommendations from <xref target="RFC6583"/> still apply.
	    </t>
    </section>
    <section anchor="Acknowledgements" title="Acknowledgements">
	    <t>
		    Thanks to the following people (in alphabetical order) for their
   review and feedback: Lorenzo Colitti, Tatuya Jinmei, Erik Kline, Warren Kumari, Michael Richardson, Pascal Thubert, Loganaden Velvindron, Eric Vyncke.
	    </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      &RFC2119;
      &RFC4291;
      &RFC4429;
      &RFC4861;
      &RFC4862;
      &RFC6775;
      &RFC8305;
      &RFC8505;
      &RFC8174;
    </references>

    <references title="Informative References">
	    &RFC4941;
	    &RFC6583;
    </references>

  </back>
</rfc>
